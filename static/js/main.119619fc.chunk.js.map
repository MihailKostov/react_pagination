{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","itemsPerPage","currentPage","onPageChange","totalPages","Math","ceil","handleSetPage","event","preventDefault","page","Number","currentTarget","dataset","className","classNames","disabled","href","onClick","map","active","items","App","useState","setItemsPerPage","setCurrentPage","startIndex","endIndex","length","id","value","onChange","target","htmlFor","newPage","slice","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCGIG,EAA8B,SAAH,GAKjC,IAJLC,EAAK,EAALA,MACAC,EAAY,EAAZA,aACAC,EAAW,EAAXA,YACAC,EAAY,EAAZA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAE/BM,EAAgB,SAACC,GACrBA,EAAMC,iBAEN,IAAMC,EAAOC,OAAOH,EAAMI,cAAcC,QAAQX,aAEhDC,EAAaO,IAGf,OACE,qBAAII,UAAU,aAAY,UACxB,oBAAIA,UAAWC,IACb,YAAa,CAAEC,SAA0B,IAAhBd,IACzB,SAEA,mBACE,UAAQ,WACRY,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBf,EACf,oBAAmBA,EAAc,EACjCgB,QAAS,kBACS,IAAhBhB,GAAqBC,EAAaD,EAAc,IAChD,oBAMLT,EAAW,EAAGW,GAAYe,KAAI,SAACT,GAAI,OAClC,oBACEI,UAAWC,IACT,YAAa,CAAEK,OAAQV,IAASR,IAChC,SAGF,mBACE,UAAQ,WACRY,UAAU,YACV,oBAAmBJ,EACnBO,KAAI,WAAMP,GACVQ,QAASX,EAAc,SAEtBG,KATEA,MAcT,oBACEI,UAAWC,IACT,YAAa,CAAEC,SAAUd,IAAgBE,IACzC,SAEF,mBACE,UAAQ,WACRU,UAAU,YACVG,KAAK,QACL,oBAAmBf,EAAc,EACjC,gBAAeA,IAAgBE,EAC/Bc,QAAS,kBACPhB,IAAiBG,KAAKC,KAAKN,EAAQC,IAC9BE,EAAaD,EAAc,IAChC,wBCzENmB,EAAQ5B,EAAW,EAAG,IACzB0B,KAAI,SAAAtB,GAAC,qBAAYA,MAEPyB,EAAgB,WAC3B,MAAwCC,mBAAS,GAAE,mBAA5CtB,EAAY,KAAEuB,EAAe,KACpC,EAAsCD,mBAAS,GAAE,mBAA1CrB,EAAW,KAAEuB,EAAc,KAE5BC,EAAazB,GAAgBC,EAAc,GAC3CyB,EAAW1B,EAAeC,EAAcmB,EAAMO,OAChD3B,EAAeC,EACfmB,EAAMO,OAMV,OACE,sBAAKd,UAAU,YAAW,UACxB,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAAM,wBACvBZ,EAAW,mBAAWwB,EAAa,EAAC,cAAMC,EAAQ,eAAON,EAAMO,OAAM,OAGhF,sBAAKd,UAAU,iBAAgB,UAC7B,qBAAKA,UAAU,0BAAyB,SACtC,yBACE,UAAQ,kBACRe,GAAG,kBACHf,UAAU,eACVgB,MAAO7B,EACP8B,SAAU,SAAAvB,GACRgB,GAAiBhB,EAAMwB,OAAOF,OAC9BL,EAAe,IACf,UAEF,wBAAQK,MAAM,IAAG,eACjB,wBAAQA,MAAM,IAAG,eACjB,wBAAQA,MAAM,KAAI,gBAClB,wBAAQA,MAAM,KAAI,qBAItB,uBAAOG,QAAQ,kBAAkBnB,UAAU,qBAAoB,+BAKjE,cAAC,EAAU,CACTd,MAAOqB,EAAMO,OACb3B,aAAcA,EACdC,YAAaA,EACbC,aAxCmB,SAAC+B,GACxBT,EAAeS,MA0Cb,6BACGb,EAAMc,MAAMT,EAAYC,GAAUR,KAAI,SAAAiB,GAAI,OACzC,oBAAI,UAAQ,OAAM,SACfA,GADqBA,YC5DlCC,IAASC,OAAO,cAAC,EAAG,IAAKC,SAASC,eAAe,W","file":"static/js/main.119619fc.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  itemsPerPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  itemsPerPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / itemsPerPage);\n\n  const handleSetPage = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n\n    const page = Number(event.currentTarget.dataset.currentPage);\n\n    onPageChange(page);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item', { disabled: currentPage === 1 },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          data-current-page={currentPage - 1}\n          onClick={() => (\n            currentPage !== 1 && onPageChange(currentPage - 1)\n          )}\n        >\n          «\n        </a>\n      </li>\n\n      {getNumbers(1, totalPages).map((page) => (\n        <li\n          className={classNames(\n            'page-item', { active: page === currentPage },\n          )}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            data-current-page={page}\n            href={`#${page}`}\n            onClick={handleSetPage}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={classNames(\n          'page-item', { disabled: currentPage === totalPages },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          data-current-page={currentPage + 1}\n          aria-disabled={currentPage === totalPages}\n          onClick={() => (\n            currentPage !== (Math.ceil(total / itemsPerPage))\n              && onPageChange(currentPage + 1)\n          )}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const startIndex = itemsPerPage * (currentPage - 1);\n  const endIndex = itemsPerPage * currentPage < items.length\n    ? itemsPerPage * currentPage\n    : items.length;\n\n  const handlePageChange = (newPage: number) => {\n    setCurrentPage(newPage);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startIndex + 1} - ${endIndex} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={event => {\n              setItemsPerPage(+event.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        itemsPerPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {items.slice(startIndex, endIndex).map(item => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}